//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JPath.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BuildXL.Execution.Analyzer.JPath {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IJPathListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class JPathBaseListener : IJPathListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.intBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntBinaryOp([NotNull] JPathParser.IntBinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.intBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntBinaryOp([NotNull] JPathParser.IntBinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.intUnaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntUnaryOp([NotNull] JPathParser.IntUnaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.intUnaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntUnaryOp([NotNull] JPathParser.IntUnaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.boolBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolBinaryOp([NotNull] JPathParser.BoolBinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.boolBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolBinaryOp([NotNull] JPathParser.BoolBinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.logicBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicBinaryOp([NotNull] JPathParser.LogicBinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.logicBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicBinaryOp([NotNull] JPathParser.LogicBinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.logicUnaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicUnaryOp([NotNull] JPathParser.LogicUnaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.logicUnaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicUnaryOp([NotNull] JPathParser.LogicUnaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.setBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetBinaryOp([NotNull] JPathParser.SetBinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.setBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetBinaryOp([NotNull] JPathParser.SetBinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.anyBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnyBinaryOp([NotNull] JPathParser.AnyBinaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.anyBinaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnyBinaryOp([NotNull] JPathParser.AnyBinaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PropertyId</c>
	/// labeled alternative in <see cref="JPathParser.prop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyId([NotNull] JPathParser.PropertyIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PropertyId</c>
	/// labeled alternative in <see cref="JPathParser.prop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyId([NotNull] JPathParser.PropertyIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EscId</c>
	/// labeled alternative in <see cref="JPathParser.prop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEscId([NotNull] JPathParser.EscIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EscId</c>
	/// labeled alternative in <see cref="JPathParser.prop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEscId([NotNull] JPathParser.EscIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdSelector</c>
	/// labeled alternative in <see cref="JPathParser.selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdSelector([NotNull] JPathParser.IdSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdSelector</c>
	/// labeled alternative in <see cref="JPathParser.selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdSelector([NotNull] JPathParser.IdSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StrLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStrLitExpr([NotNull] JPathParser.StrLitExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StrLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStrLitExpr([NotNull] JPathParser.StrLitExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RegExLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegExLitExpr([NotNull] JPathParser.RegExLitExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RegExLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegExLitExpr([NotNull] JPathParser.RegExLitExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IntLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntLitExpr([NotNull] JPathParser.IntLitExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntLitExpr([NotNull] JPathParser.IntLitExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PropertyValue</c>
	/// labeled alternative in <see cref="JPathParser.propVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyValue([NotNull] JPathParser.PropertyValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PropertyValue</c>
	/// labeled alternative in <see cref="JPathParser.propVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyValue([NotNull] JPathParser.PropertyValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjLitProps</c>
	/// labeled alternative in <see cref="JPathParser.objLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjLitProps([NotNull] JPathParser.ObjLitPropsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjLitProps</c>
	/// labeled alternative in <see cref="JPathParser.objLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjLitProps([NotNull] JPathParser.ObjLitPropsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MapExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMapExpr([NotNull] JPathParser.MapExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MapExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMapExpr([NotNull] JPathParser.MapExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncOptExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncOptExpr([NotNull] JPathParser.FuncOptExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncOptExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncOptExpr([NotNull] JPathParser.FuncOptExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CardinalityExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCardinalityExpr([NotNull] JPathParser.CardinalityExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CardinalityExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCardinalityExpr([NotNull] JPathParser.CardinalityExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SaveToFileExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSaveToFileExpr([NotNull] JPathParser.SaveToFileExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SaveToFileExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSaveToFileExpr([NotNull] JPathParser.SaveToFileExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LetExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetExpr([NotNull] JPathParser.LetExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LetExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetExpr([NotNull] JPathParser.LetExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubExpr([NotNull] JPathParser.SubExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubExpr([NotNull] JPathParser.SubExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AppendToFileExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAppendToFileExpr([NotNull] JPathParser.AppendToFileExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AppendToFileExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAppendToFileExpr([NotNull] JPathParser.AppendToFileExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BinExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinExpr([NotNull] JPathParser.BinExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BinExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinExpr([NotNull] JPathParser.BinExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RangeExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeExpr([NotNull] JPathParser.RangeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RangeExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeExpr([NotNull] JPathParser.RangeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignExpr([NotNull] JPathParser.AssignExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignExpr([NotNull] JPathParser.AssignExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SelectorExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectorExpr([NotNull] JPathParser.SelectorExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SelectorExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectorExpr([NotNull] JPathParser.SelectorExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FilterExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilterExpr([NotNull] JPathParser.FilterExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FilterExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilterExpr([NotNull] JPathParser.FilterExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RootExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRootExpr([NotNull] JPathParser.RootExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RootExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRootExpr([NotNull] JPathParser.RootExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjLitExpr([NotNull] JPathParser.ObjLitExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjLitExpr([NotNull] JPathParser.ObjLitExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PipeExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPipeExpr([NotNull] JPathParser.PipeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PipeExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPipeExpr([NotNull] JPathParser.PipeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarExpr([NotNull] JPathParser.VarExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarExpr([NotNull] JPathParser.VarExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpr([NotNull] JPathParser.LiteralExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpr([NotNull] JPathParser.LiteralExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncAppExprParen</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncAppExprParen([NotNull] JPathParser.FuncAppExprParenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncAppExprParen</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncAppExprParen([NotNull] JPathParser.FuncAppExprParenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ThisExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisExpr([NotNull] JPathParser.ThisExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ThisExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisExpr([NotNull] JPathParser.ThisExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace BuildXL.Execution.Analyzer.JPath
